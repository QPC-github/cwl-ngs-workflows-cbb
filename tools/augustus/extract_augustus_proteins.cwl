class: CommandLineTool
cwlVersion: v1.0

label: extract_augustus_proteins
doc: Extracts proteins generated by Augustus

hints:
  DockerRequirement:
    dockerPull: quay.io/biocontainers/biopython:1.78
  SoftwareRequirement:
    packages:
      - package: 'python'
        version:
          - '3.9.1'
        specs:
          - https://anaconda.org/conda-forge/python
      - package: 'biopython'
        version:
          - '1.78'
        specs:
          - https://anaconda.org/conda-forge/biopython

requirements:
  ResourceRequirement: {}
  InlineJavascriptRequirement: {}
  InitialWorkDirRequirement:
    listing:
      - entryname: extract_augustus_proteins.py
        entry: |
          import os
          import sys

          from collections import namedtuple
          from Bio.SeqRecord import SeqRecord
          from Bio.Seq import Seq

          augustus_gtf = sys.argv[1]
          output = sys.argv[2]

          Location = namedtuple("Location", ["start", "end"])

          class Feature:
              def __init__(self, feats):
                  self.type = feats[2]
                  self.features = {}
                  self.location = Location(start=int(feats[3]), end=int(feats[4]))
                  self.strand = feats[6]

          with open(augustus_gtf) as file_obj, open(output, "w") as file_out:
              line = file_obj.readline()
              while line:
                  line = line.strip()
                  if not line.startswith('#'):
                      feats = line.split('\t')
                      if feats[2] == 'gene':
                          g = Feature(feats)
                          g.features['ID'] = feats[8].strip()
                          g.features['Parent'] = feats[0]
                          g.features['Protein'] = False
                          line = file_obj.readline()
                          while line:
                              if '# protein sequence = [' in line:
                                  if ']' in line:
                                      g.features['Protein'] = line.strip()
                                      g.features['Protein'] = g.features['Protein'][g.features['Protein'].index('[') + 1:g.features['Protein'].index(']')]
                                  else:
                                      g.features['Protein'] = line.strip()
                                      g.features['Protein'] = g.features['Protein'][g.features['Protein'].index('[') + 1:]
                                      line = file_obj.readline()
                                      while line:
                                          g.features['Protein'] += line.strip()[2:]
                                          if ']' in line:
                                              g.features['Protein'] = g.features['Protein'][:-1]
                                              break
                                          line = file_obj.readline()
                              if g.features['Protein']:
                                  break
                              line = file_obj.readline()
                          record = SeqRecord(Seq(g.features['Protein']),
                                       id='{}_{}-{} ({})'.format(g.features['Parent'],
                                                                 g.location.start, g.location.end,
                                                                g.strand), name="",description="")
                          file_out.write(record.format("fasta"))
                  line = file_obj.readline()

inputs:
  gtf:
    type: File
    inputBinding:
      position: 1
  fasta:
    type: string
    inputBinding:
      position: 2

outputs:
  fsa:
    type: File
    outputBinding:
      glob: $(inputs.fasta)

baseCommand: ["python","extract_augustus_proteins.py"]

s:author:
  - class: s:Person
    s:identifier: https://orcid.org/0000-0002-4108-5982
    s:email: mailto:r78v10a07@gmail.com
    s:name: Roberto Vera Alvarez

$namespaces:
  s: http://schema.org/

$schemas:
  - https://schema.org/version/latest/schemaorg-current-http.rdf




